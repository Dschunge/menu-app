"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Filter } from "lucide-react"
import { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from "@/components/ui/sheet"
import { Checkbox } from "@/components/ui/checkbox"
import { Label } from "@/components/ui/label"

interface FilterOption {
  id: string
  name: string
  count: number
}

interface CategoryFilterProps {
  dietaryOptions: FilterOption[]
  onFilterChange: (filters: string[]) => void
}

export default function CategoryFilter({ dietaryOptions, onFilterChange }: CategoryFilterProps) {
  const [selectedFilters, setSelectedFilters] = useState<string[]>([])
  const [isOpen, setIsOpen] = useState(false)

  const handleFilterChange = (id: string) => {
    setSelectedFilters((prev) => {
      const newFilters = prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]

      onFilterChange(newFilters)
      return newFilters
    })
  }

  const clearFilters = () => {
    setSelectedFilters([])
    onFilterChange([])
  }

  return (
    <div className="mb-4">
      <Sheet open={isOpen} onOpenChange={setIsOpen}>
        <SheetTrigger asChild>
          <Button variant="outline" size="sm" className="flex items-center gap-1">
            <Filter className="h-4 w-4" />
            Filter
            {selectedFilters.length > 0 && (
              <span className="ml-1 bg-primary text-primary-foreground rounded-full w-5 h-5 flex items-center justify-center text-xs">
                {selectedFilters.length}
              </span>
            )}
          </Button>
        </SheetTrigger>
        <SheetContent side="bottom" className="h-[70vh]">
          <SheetHeader>
            <SheetTitle>Filter Menu</SheetTitle>
            <SheetDescription>Filter dishes by dietary preferences</SheetDescription>
          </SheetHeader>

          <div className="py-4">
            <h3 className="font-medium mb-2">Dietary Preferences</h3>
            <div className="space-y-2">
              {dietaryOptions.map((option) => (
                <div key={option.id} className="flex items-center space-x-2">
                  <Checkbox
                    id={option.id}
                    checked={selectedFilters.includes(option.id)}
                    onCheckedChange={() => handleFilterChange(option.id)}
                  />
                  <Label htmlFor={option.id} className="flex-1">
                    {option.name} <span className="text-gray-500 text-sm">({option.count})</span>
                  </Label>
                </div>
              ))}
            </div>
          </div>

          <div className="flex justify-between mt-4">
            <Button variant="outline" onClick={clearFilters} disabled={selectedFilters.length === 0}>
              Clear Filters
            </Button>
            <Button onClick={() => setIsOpen(false)}>Apply</Button>
          </div>
        </SheetContent>
      </Sheet>
    </div>
  )
}
